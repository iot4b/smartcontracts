How the NODE works: {
    shape: sequence_diagram
    Vendor: Vendor
    App: User App
    Device: IOT Device
    Node: Node
    DB: Local DB
    Ever_Device: Everscale Device SC
    Ever_Node: Everscale Node SC
    Ever_Elector: Everscale Elector SC

    Create the device {
        Vendor->Ever_Device: deoply new Device SC
        Vendor->Ever_Device: add tokens to Device SC
    }

    Register on node: {
        Device->Node: call /endpoints?address
        Node->Ever_Device: get data from Device SC
        Node->Ever_Elector: get list of active nodes in current cycle (from cache if exist)
        Node->Device: return list of Nodes
        Device->Node: call /info and check the ping time
        Device->Node->Ever_Device: set closest node address to Device SC  as  currentNode
        Device->Node->Ever_Node: call Node SC and make a payment for for current cycle
        Node->Ever_Device: read the Device SC and check the device payments
        Node->DB: save data about device and payment to local DB
    }

    Send Live packet: {
        Device->Node: call /l?a \[address\] each 30sec ("address" and "live" reduced to "a","l" for less traffic)
        Node->DB: save data about device
    }

    Send CMD: { 
        App->Node->Ever_Device: call /device/locate?address and get current node for this device
        App->Node: call /cmd?address&cmd  send command
        Node<->DB: get ip:port for Address
        Node->Device: call ip:port/cmd?address&cmd  send command
        Device->Device: check CMD sigh
        Device->Device: Do the work
        Device->Device: Sign the result CMD with App.Address
        Device->Node->App: send result CMD
    }

    Nodes sync: {
        Node->Ever_Elector: get list of active nodes in current cycle
        Node<->Node: ping all nodes from list 
        Node->Ever_Node->Ever_Elector: call .ReportNodeFail() for all nodes not responding
        Ever_Elector->Ever_Elector: remove node from list
    }

    Node election: {
        Ever_Node->Ever_Elector: Register for election
        Ever_Node->Ever_Elector: Send stake
        Ever_Node->Ever_Elector: Wait for election
        Ever_Node->Ever_Device: Get the money!
        Ever_Elector->Ever_Node: Return stake and profit
    }
  }